(import (chicken io)
        (chicken process-context)
        (chicken string)
        (srfi 1))

(define (import-input path)
  (map
    (lambda (str)
      (string-split str ": -"))
    (read-lines (open-input-file path))))

(define (is-valid/1? line)
  (let ((lower    (string->number (car  line)))
        (higher   (string->number (cadr line)))
        (letter   (caddr  line))
        (password (cadddr line)))
    (let ((cnt (length (filter
                         (lambda (char)
                           (string=? letter (string char)))
                         (string->list password)))))
      (not (or (< cnt lower)
               (> cnt higher))))))

(define (is-valid/2? line)
  (let ((index-1 (sub1 (string->number (car  line))))
        (index-2 (sub1 (string->number (cadr line))))
        (letter   (caddr  line))
        (password (cadddr line)))
    (letrec* ((helper (lambda (index)
                        (string=? letter (string (string-ref password index)))))
              (res (not (equal? (helper index-1)
                                (helper index-2)))))
      res)))

(define (solve proc input)
  (display (length (filter proc input)))
  (newline))

(let ((path (car (command-line-arguments))))
  (let ((input (import-input path)))
    (solve is-valid/1? input)
    (solve is-valid/2? input)))
